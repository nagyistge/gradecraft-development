- if current_user_is_staff?
  = render partial: "grades/components/edit_button", locals: { grade: grade }

- if grade.excluded_from_course_score?
  = render partial: "grades/components/excluded", locals: { grade: grade }

- unless grade.group.nil?
  = render partial: "grades/components/students_in_group", locals: { grade: grade }

- unless grade.assignment.threshold_points.nil?
  = render partial: "grades/components/threshold", locals: { grade: grade }

- if grade.assignment.pass_fail?
  = render partial: "grades/components/pass_fail", locals: { presenter: Assignments::StudentPresenter.new(student: grade.student, assignment_types: current_course.assignment_types.ordered.includes(:assignments), course: current_course ), assignment: grade.assignment }
- else
  = render partial: "grades/components/score", locals: { grade: grade, assignment_type: grade.assignment_type, assignment: grade.assignment }

= render partial: "grades/components/graded_at", locals: { grade: grade }

- if current_user_is_staff?
  = render partial: "grades/components/status", locals: { grade: grade }

- if grade.adjustment_points != 0
  = render partial: "grades/components/points_adjustment", locals: { grade: grade }

- if grade.file_uploads.present?
  = render partial: "grades/components/attachments", locals: { grade: grade }

- if grade.feedback.present?
  = render partial: "grades/components/feedback", locals: { grade: grade }

- if grade.earned_badges.present?
  = render partial: "grades/components/badges", locals: { grade: grade }

- if current_course.has_learning_objectives?
  - assignment_id = grade.assignment_id if grade.assignment.learning_objectives.any?
  - if assignment_id || current_course.always_show_objectives?
    %learning-objectives-grade-overview{'data-assignment-id'=>"#{assignment_id}"}

- if grade.assignment.grade_with_rubric?
  .rubric-container
    = render partial: "rubrics/components/rubric_table", locals: { presenter: Assignments::Presenter.new(assignment: grade.assignment, course: current_course), rubric: grade.assignment.rubric, student: grade.student, include_grade_info: true }

- if current_user_is_student?
  = render partial: "grades/components/request_feedback", locals: { grade: grade }
